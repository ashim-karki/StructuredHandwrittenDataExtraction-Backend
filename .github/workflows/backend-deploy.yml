name: Backend Deploy
on:
  workflow_run:
    workflows: ["Backend Build"]
    types:
      - completed
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            # Define image name for clarity
            IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/backend:latest"
            
            # Create a named volume if it doesn't exist
            docker volume create backend_db_data || true
            docker volume create backend_uploaded_images || true
            
            # Pull the latest image
            echo "Pulling latest image: $IMAGE_NAME"
            docker pull $IMAGE_NAME
            
            # Stop and remove existing container
            echo "Stopping and removing existing container"
            docker stop backend || true
            docker rm backend || true
            
            # Run new container with volumes mounted and Google API key
            echo "Starting new container"
            docker run -d --name backend -p 8000:8000 \
              -v backend_db_data:/app/data \
              -v backend_uploaded_images:/app/uploaded_images \
              -e GOOGLE_API_KEY="${{ secrets.GOOGLE_API_KEY }}" \
              $IMAGE_NAME
            
            # Verify container is running
            echo "Verifying container status"
            docker ps | grep backend
            
            # Clean up (but don't remove unused volumes)
            echo "Cleaning up unused resources"
            docker system prune -f